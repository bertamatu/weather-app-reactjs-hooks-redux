{"version":3,"sources":["App.js","actions/fetchWeather.js","reducers/weatherReducer.js","reducers/index.js","store/store.js","index.js"],"names":["ErrorMessage","weatherError","useSelector","state","weatherInfo","error","undefined","style","color","info","Location","props","location","LocationIcon","LocationName","name","country","WeatherInformation","weatherDescription","weather_descriptions","length","weatherImage","weather_icons","TemperatureResultBar","Temperature","temperature","WeatherDescription","fontWeight","feelslike","ComfortLevelData","WeatherImage","src","alt","cloudcover","uv_index","humidity","WindData","WindIcon","wind_speed","wind_dir","WeatherSection","current","require","config","App","useState","city","setCity","textInput","useRef","dispatch","useDispatch","pending","Loader","AppContainer","onSubmit","e","preventDefault","type","axios","get","process","then","result","data","payload","catch","fetchWeather","CityInput","placeholder","value","ref","onChange","target","Button","onClick","styled","section","LoaderAnimation","keyframes","div","input","button","GoLocation","img","GiWindTurbine","action","rootReducer","combineReducers","middleware","applyMiddleware","thunk","composeEnhancers","composeWithDevTools","store","createStore","weatherReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0zFAOA,SAASA,IACP,IAAMC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYC,SAC9D,YAAqBC,IAAjBL,GAA+C,OAAjBA,EAA8B,KAE9D,iCACE,wBAAIM,MAAO,CAAEC,MAAO,QAAUP,EAAaQ,OAKjD,SAASC,EAASC,GAChB,GAAIA,QAA4BL,IAAnBK,EAAMC,SAAwB,OAAO,KAClD,IAAMA,EAAWD,EAAMC,SACvB,OACE,iCAIE,kBAACC,EAAD,MACA,6BACA,kBAACC,EAAD,KACGF,EAASG,KADZ,IAEE,6BACCH,EAASI,UAQlB,SAASC,EAAmBN,GAC1B,IAAKA,QAAwBL,IAAfK,EAAMF,KAAoB,OAAO,KAC/C,IAAMA,EAAOE,EAAMF,KACbS,EACJT,EAAKU,qBAAqBC,OAAS,EAAIX,EAAKU,qBAAqB,GAAK,KAClEE,EACJZ,EAAKa,cAAcF,OAAS,EAAIX,EAAKa,cAAc,GAAK,KAE1D,OACE,iCACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAcf,EAAKgB,aACnB,yCAEF,kBAACC,EAAD,CAAoBnB,MAAO,CAAEoB,WAAY,MACtCT,EADH,gBACoCT,EAAKmB,UACvC,wCAFF,KAIA,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAcC,IAAKV,EAAcW,IAAI,YAErC,kBAACN,EAAD,qBACgBjB,EAAKwB,WADrB,IAEE,6BAFF,aAGaxB,EAAKyB,SAChB,6BAJF,aAKazB,EAAK0B,SALlB,OAQF,kBAACC,EAAD,KACE,kBAACC,EAAD,MACA,kBAACX,EAAD,KACE,mCADF,UAEUjB,EAAK6B,WAFf,OAGE,6BAHF,cAIc7B,EAAK8B,YAO3B,SAASC,IACP,IAAMpC,EAAcF,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYK,QACrDG,EAAsBR,EAAtBQ,SAAU6B,EAAYrC,EAAZqC,QAElB,OACE,iCACE,kBAAC/B,EAAD,CAAUE,SAAUA,IACpB,kBAACK,EAAD,CAAoBR,KAAMgC,KCtFhCC,EAAQ,IAAUC,SDmIHC,MAzCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAEPC,EAAYC,mBACZC,EAAWC,cASjB,OAAgB,IARAjD,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYgD,WAShD,kBAACC,EAAD,MAGP,kBAACC,EAAD,KACE,0BAAMC,SAXa,SAACC,GAClBA,GAAGA,EAAEC,iBACTP,EChGW,SAAsBJ,GACnC,OAAO,SAAUI,GAIf,OADAA,EAAS,CAAEQ,KAAM,0BACVC,IACJC,IADI,yDAHSC,mCAGT,kBAEgEf,IAEpEgB,MAAK,SAACC,GACL,IACQ1D,EADK0D,EAAOC,KACZ3D,MACR,GAAIA,EACF,MAAMA,EAER6C,EAAS,CAAEQ,KAAM,wBAAyBO,QAASF,EAAOC,UAE3DE,OAAM,SAAC7D,GACN6C,EAAS,CAAEQ,KAAM,sBAAuBrD,MAAOA,QD8E1C8D,CAAarB,MAUlB,kBAACsB,EAAD,CACEV,KAAK,OACLW,YAAY,UACZC,MAAOxB,EACPyB,IAAKvB,EACLwB,SAAU,SAAChB,GACTT,EAAQS,EAAEiB,OAAOH,UAGrB,kBAACI,EAAD,CAAQhB,KAAK,SAASiB,QAjBT,kBAAO3B,EAAUP,QAAQ6B,MAAQ,KAiB9C,OAIF,6BACA,kBAACtE,EAAD,MACA,6BACA,iCACE,kBAACwC,EAAD,SAQFc,EAAesB,IAAOC,QAAV,KAIZC,EAAkBC,YAAH,KAQf1B,EAASuB,IAAOI,IAAV,IAUQF,GAGdV,EAAYQ,IAAOK,MAAV,KAcTP,EAASE,IAAOM,OAAV,KAQNrE,EAAe+D,YAAOO,IAAPP,CAAH,KAIZ9D,EAAe8D,IAAOC,QAAV,KAMZtD,EAAuBqD,IAAOC,QAAV,KAKpBrD,EAAcoD,IAAOC,QAAV,KAOXhD,EAAmB+C,IAAOC,QAAV,KAMhB/C,EAAe8C,IAAOQ,IAAV,KAOZ1D,EAAqBkD,IAAOC,QAAV,KAWlBzC,EAAWwC,IAAOC,QAAV,KAKRxC,EAAWuC,YAAOS,IAAPT,CAAH,K,sBElNCxE,EAtBK,WAMd,IAJJD,EAIG,uDAJK,CACNM,KAAM,IAER6E,EACG,uCACH,OAAQA,EAAO5B,MACb,IAAK,wBACHvD,EAAK,2BAAQA,GAAR,IAAeiD,SAAS,IAC7B,MACF,IAAK,wBACHjD,EAAK,2BAAQA,GAAR,IAAeM,KAAM6E,EAAOrB,QAAS5D,MAAO,KAAM+C,SAAS,IAChE,MACF,IAAK,sBACHjD,EAAK,2BAAQA,GAAR,IAAeE,MAAOiF,EAAOjF,MAAO+C,SAAS,EAAO3C,KAAM,KAInE,OAAON,GCZMoF,EAJKC,0BAAgB,CAClCpF,gB,QCCIqF,GAAaC,0BAAgBC,KAC7BC,GAAmBC,8BAAoBJ,IAG9BK,GAFDC,sBAAYC,EAAgBJ,ICA1CK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,EAAD,QAIJM,SAASC,eAAe,W","file":"static/js/main.d9dc8034.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled, { keyframes } from \"styled-components\";\nimport { GiWindTurbine, GiThermometerHot } from \"react-icons/gi\";\nimport { GoLocation, GoGraph } from \"react-icons/go\";\nimport fetchWeather from \"./actions/fetchWeather\";\n\nfunction ErrorMessage() {\n  const weatherError = useSelector((state) => state.weatherInfo.error);\n  if (weatherError === undefined || weatherError === null) return null;\n  return (\n    <section>\n      <h6 style={{ color: \"red\" }}>{weatherError.info}</h6>\n    </section>\n  );\n}\n\nfunction Location(props) {\n  if (props && props.location === undefined) return null;\n  const location = props.location;\n  return (\n    <section>\n      {/* <WiTime10 />\n      {location.localtime}\n      <br /> */}\n      <LocationIcon />\n      <br />\n      <LocationName>\n        {location.name},\n        <br />\n        {location.country}\n      </LocationName>\n      {/* <br />\n      Lang: {location.lat}, Lon: {location.lon} */}\n    </section>\n  );\n}\n\nfunction WeatherInformation(props) {\n  if (!props || props.info === undefined) return null;\n  const info = props.info;\n  const weatherDescription =\n    info.weather_descriptions.length > 0 ? info.weather_descriptions[0] : null;\n  const weatherImage =\n    info.weather_icons.length > 0 ? info.weather_icons[0] : null;\n\n  return (\n    <section>\n      <TemperatureResultBar>\n        <Temperature>{info.temperature}</Temperature>\n        <span>&#8451;</span>\n      </TemperatureResultBar>\n      <WeatherDescription style={{ fontWeight: 600 }}>\n        {weatherDescription}. Feels like {info.feelslike}\n        <span>&#8451;</span>.\n      </WeatherDescription>\n      <ComfortLevelData>\n        <WeatherImage src={weatherImage} alt=\"weather\" />\n        {/* <DataIcon /> */}\n        <WeatherDescription>\n          Cloud cover: {info.cloudcover}%\n          <br />\n          UV index: {info.uv_index}\n          <br />\n          Humidity: {info.humidity} %\n        </WeatherDescription>\n      </ComfortLevelData>\n      <WindData>\n        <WindIcon />\n        <WeatherDescription>\n          <p>Wind</p>\n          Speed: {info.wind_speed} m/s\n          <br />\n          Direction: {info.wind_dir}\n        </WeatherDescription>\n      </WindData>\n    </section>\n  );\n}\n\nfunction WeatherSection() {\n  const weatherInfo = useSelector((state) => state.weatherInfo.info);\n  const { location, current } = weatherInfo;\n\n  return (\n    <section>\n      <Location location={location} />\n      <WeatherInformation info={current} />\n    </section>\n  );\n}\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const textInput = useRef();\n  const dispatch = useDispatch();\n  const pending = useSelector((state) => state.weatherInfo.pending);\n\n  const getWeatherInfo = (e) => {\n    if (e) e.preventDefault();\n    dispatch(fetchWeather(city));\n  };\n  const clearInput = () => (textInput.current.value = \"\");\n\n  if (pending === true) {\n    return <Loader></Loader>;\n  }\n  return (\n    <AppContainer>\n      <form onSubmit={getWeatherInfo}>\n        <CityInput\n          type=\"text\"\n          placeholder=\"City...\"\n          value={city}\n          ref={textInput}\n          onChange={(e) => {\n            setCity(e.target.value);\n          }}\n        />\n        <Button type=\"submit\" onClick={clearInput}>\n          GO\n        </Button>\n      </form>\n      <br />\n      <ErrorMessage />\n      <br />\n      <section>\n        <WeatherSection />\n      </section>\n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled.section`\n  height: 100%;\n  color: white;\n`;\nconst LoaderAnimation = keyframes`\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n`;\nconst Loader = styled.div`\n  margin: 0 auto;\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px dotted white;\n  width: 100px;\n  height: 100px;\n  opacity: 0.3;\n  animation: spin 1s linear infinite;\n  -webkit-animation: spin 1s linear infinite;\n  animation-name: ${LoaderAnimation};\n`;\n\nconst CityInput = styled.input`\n  background: transparent;\n  background-color: rgba(255, 255, 255, 0.2);\n  border: none;\n  outline-color: white;\n  padding: 1.5rem;\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: white;\n  }\n  :-ms-input-placeholder {\n    color: white;\n  }\n`;\nconst Button = styled.button`\n  border: none;\n  outline-color: white;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 1.5rem;\n  color: white;\n  font-weight: 600;\n`;\nconst LocationIcon = styled(GoLocation)`\n  font-size: 2rem;\n  opacity: 0.3;\n`;\nconst LocationName = styled.section`\n  font-size: 0.8rem;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n  font-weight: 500;\n`;\nconst TemperatureResultBar = styled.section`\n  display: flex;\n  justify-content: center;\n  color: rgba(255, 255, 255, 0.4);\n`;\nconst Temperature = styled.section`\n  padding: 0;\n  margin: 0;\n  font-size: 6rem;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-weight: 100;\n`;\nconst ComfortLevelData = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\nconst WeatherImage = styled.img`\n  width: 60px;\n  border-radius: 50%;\n  border: 3px solid white;\n  opacity: 0.7;\n  filter: grayscale(100%);\n`;\nconst WeatherDescription = styled.section`\n  font-weight: 200;\n  text-transform: uppercase;\n  font-size: 0.8rem;\n  margin: 1rem;\n`;\n// const DataIcon = styled(GiThermometerHot)`\n//   font-size: 5rem;\n//   opacity: 0.5;\n// `;\n\nconst WindData = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst WindIcon = styled(GiWindTurbine)`\n  font-size: 5rem;\n  opacity: 0.5;\n`;\n","import axios from \"axios\";\nrequire(\"dotenv\").config();\n\nexport default function fetchWeather(city) {\n  return function (dispatch) {\n    const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\n    dispatch({ type: \"FETCH_WEATHER_PENDING\" });\n    return axios\n      .get(\n        `http://api.weatherstack.com/current?access_key=${API_KEY}&query=${city}`\n      )\n      .then((result) => {\n        const data = result.data;\n        const { error } = data;\n        if (error) {\n          throw error;\n        }\n        dispatch({ type: \"FETCH_WEATHER_SUCCESS\", payload: result.data });\n      })\n      .catch((error) => {\n        dispatch({ type: \"FETCH_WEATHER_ERROR\", error: error });\n      });\n  };\n}\n","const weatherInfo = (\n  //initial state\n  state = {\n    info: {},\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"FETCH_WEATHER_PENDING\":\n      state = { ...state, pending: true };\n      break;\n    case \"FETCH_WEATHER_SUCCESS\":\n      state = { ...state, info: action.payload, error: null, pending: false };\n      break;\n    case \"FETCH_WEATHER_ERROR\":\n      state = { ...state, error: action.error, pending: false, info: {} };\n      break;\n    default:\n  }\n  return state;\n};\n\nexport default weatherInfo;\n","import { combineReducers } from \"redux\";\nimport weatherInfo from \"./weatherReducer\";\n\nconst rootReducer = combineReducers({\n  weatherInfo,\n});\n\nexport default rootReducer;\n","import thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport weatherReducer from \"../reducers/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst middleware = applyMiddleware(thunk);\nconst composeEnhancers = composeWithDevTools(middleware);\nconst store = createStore(weatherReducer, composeEnhancers);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n"],"sourceRoot":""}